{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAEI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAQlB,SACI,uBACIO,YAAc,YACdC,KAAK,OACLC,MAAQV,EACRW,SAtBc,SAACR,GAEvBF,EAAcE,EAAES,OAAOF,a,QCRlBG,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACjC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,kCAAKA,S,uBCNJK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,0FAE6EO,UAAUF,GAFvF,qBAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVvB,kBAcZY,GAdY,4CAAH,sDCKPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0BrB,mBAEtB,CACI2B,KAAM,GACNQ,SAAS,IAJjB,mBAAOC,EAAP,KAAcC,EAAd,KA4BA,OArBAC,qBAAU,WAENlB,EAAQC,GACHkB,MAAO,SAAAC,GAEJC,YAAW,WACPJ,EACC,CACDV,KAAMa,EACNL,SAAS,MAEV,UAGZ,CAACd,IAOGe,ED1ByBM,CAAarB,GAAhCW,EAAb,EAAQL,KAAaQ,EAArB,EAAqBA,QAErB,OAEI,qCACI,oBAAIlB,UAAU,oCAAd,SAAoDI,IAElDc,GAAW,mBAAGlB,UAAU,mCAAb,wBACb,qBAAKA,UAAU,YAAf,SAEIe,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEafY,EA5BK,WAGjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAGA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWf,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADJA,YCfpCwB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.93d62add.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if( inputValue.trim().length > 1) {\r\n            setCategories( cats => [ inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n       \r\n\r\n    }\r\n    return (\r\n        \r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                placeholder = \"Buscar...\"\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n                \r\n            />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=GItBZrLgwVFWYhG4rl2B28iSJwCwDU5K&q=${ encodeURI(category) }&limit=4`;\r\n    const resp = await fetch (url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n//import { getGifs } from '../helpers/GetGif';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport {useFetchGifs} from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n \r\n    const { data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n            <div className=\"card-grid\">\r\n                {\r\n                images.map( img => (\r\n                    <GifGridItem \r\n                    key = {img.id}\r\n                    {...img}\r\n                        \r\n                    />))\r\n                } \r\n            </div> \r\n            \r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState(\r\n\r\n        {\r\n            data: [],\r\n            loading: true\r\n        }\r\n    );\r\n    useEffect(() => {\r\n        \r\n        getGifs(category)\r\n            .then ( imgs => {\r\n\r\n                setTimeout(() => {\r\n                    setState\r\n                    ({\r\n                    data: imgs,\r\n                    loading: false,\r\n                    })\r\n                }, 500);\r\n                \r\n            })\r\n    }, [category])\r\n        // setTimeout(() => {\r\n        //     setstate ({\r\n        //         data: [1,2,3,4,5],\r\n        //         loading: false\r\n        //     })\r\n        // }, 3000 );\r\n    return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    \r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category}\r\n                            category ={ category }\r\n                        />\r\n                        ))\r\n                }\r\n            </ol>\r\n        </>\r\n        \r\n        );\r\n}\r\n\r\n\r\n export default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}